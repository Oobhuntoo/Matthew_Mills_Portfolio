ERROR(7): Symbol 'v' is already declared at line 6.
ERROR(8): Symbol 'x' is already declared at line 6.
WARNING(12): Variable 'y' may be uninitialized when used here.
ERROR(13): Symbol 'w' is not declared.
ERROR(13): Symbol 'u' is not declared.
WARNING(6): The variable 'v' seems not to be used.
WARNING(6): The variable 'z' seems not to be used.
ERROR(16): Symbol 'bob' is already declared at line 1.
ERROR(16): Symbol 'bob' is already declared at line 16.
ERROR(17): Initializer for variable 'bob' is not a constant expression.
ERROR(17): Symbol 'bob' is already declared at line 16.
ERROR(20): Symbol 'bob' is already declared at line 19.
WARNING(19): The variable 'bob' seems not to be used.
ERROR(31): Symbol 'bob' is already declared at line 1.
ERROR(33): Symbol 'bob' is already declared at line 1.
ERROR(33): Symbol 'a' is already declared at line 33.
WARNING(39): Variable 'dave' may be uninitialized when used here.
WARNING(33): The parameter 'a' seems not to be used.
WARNING(2): The variable 'x' seems not to be used.
Var alice of type bool [mem: Global  size: 1  loc: 0]
Sibling: 0  Var bob of type bool [mem: Global  size: 1  loc: -1]
Sibling: 1  Var carol of type bool [mem: Global  size: 1  loc: -2]
!   Child: 0  Const: true
Sibling: 2  Var x of type int [mem: Global  size: 1  loc: -3]
Sibling: 3  Var q of type int [mem: Global  size: 1  loc: -4]
Sibling: 4  Func main returns type void [mem: Global  loc: 0]
!   Child: 1  Compound
!   !   Child: 0  Var v of type int [mem: Local  size: 1  loc: -2]
!   !   Sibling: 0  Var x of type int [mem: Local  size: 1  loc: -3]
!   !   Sibling: 1  Var y of type int [mem: Local  size: 1  loc: -4]
!   !   Sibling: 2  Var z of type int [mem: Local  size: 1  loc: -5]
!   !   Sibling: 3  Var v of type int [mem: Local  size: 1  loc: 0]
!   !   Sibling: 4  Var x of type char [mem: Local  size: 1  loc: 0]
!   !   Child: 1  Assign: =
!   !   !   Child: 0  Id: q [mem: Global  size: 1  loc: -4]
!   !   !   Child: 1  Const: 7
!   !   Sibling: 0  Assign: =
!   !   !   Child: 0  Id: x [mem: Local  size: 1  loc: -3]
!   !   !   Child: 1  Const: 3
!   !   Sibling: 1  Assign: =
!   !   !   Child: 0  Id: x [mem: Local  size: 1  loc: -3]
!   !   !   Child: 1  Id: y [mem: Local  size: 1  loc: -4]
!   !   Sibling: 2  Assign: =
!   !   !   Child: 0  Id: w [mem: None  size: 1  loc: 0]
!   !   !   Child: 1  Id: u [mem: None  size: 1  loc: 0]
Sibling: 5  Func bob returns type void [mem: Global  loc: 0]
!   Child: 0  Param bob of type int [mem: Parameter  size: 1  loc: -2]
!   Sibling: 0  Param bob of type int [mem: Parameter  size: 1  loc: 0]
!   Child: 1  Compound
!   !   Child: 0  Var bob of type int [mem: Local  size: 1  loc: 0]
!   !   !   Child: 0  Id: bob [mem: Parameter  size: 1  loc: -2]
!   !   Child: 1  Loop
!   !   !   Child: 0  Var bob of type int [mem: Local  size: 1  loc: -3]
!   !   !   Child: 1  Range
!   !   !   !   Child: 0  Const: 1
!   !   !   !   Child: 1  Const: 10
!   !   !   !   Child: 2  Const: 1
!   !   !   Child: 2  Compound
!   !   !   !   Child: 0  Var bob of type int [mem: Local  size: 1  loc: 0]
!   !   Sibling: 0  Assign: =
!   !   !   Child: 0  Id: bob [mem: Parameter  size: 1  loc: -2]
!   !   !   Child: 1  Const: 1
!   !   Sibling: 1  Compound
!   !   !   Child: 0  Var bob of type int [mem: Local  size: 1  loc: -3]
!   !   !   Child: 1  Assign: =
!   !   !   !   Child: 0  Id: bob [mem: Local  size: 1  loc: -3]
!   !   !   !   Child: 1  Const: 2
!   !   Sibling: 2  Assign: =
!   !   !   Child: 0  Id: bob [mem: Parameter  size: 1  loc: -2]
!   !   !   Child: 1  Id: bob [mem: Parameter  size: 1  loc: -2]
Sibling: 6  Func bob returns type void [mem: Global  loc: 0]
Sibling: 7  Func bob returns type void [mem: Global  loc: 0]
!   Child: 0  Param a is array of type int [mem: Parameter  size: 1  loc: -2]
!   Sibling: 0  Param a is array of type int [mem: Parameter  size: 1  loc: 0]
!   Child: 1  Compound
!   !   Child: 0  Var dave of type bool [mem: Local  size: 1  loc: -3]
!   !   Sibling: 0  Var ella of type bool [mem: Local  size: 1  loc: -4]
!   !   !   Child: 0  Op: or
!   !   !   !   Child: 0  Const: false
!   !   !   !   Child: 1  Const: true
!   !   Sibling: 1  Var z of type bool [mem: Local  size: 1  loc: -5]
!   !   Child: 1  Assign: =
!   !   !   Child: 0  Id: z [mem: Local  size: 1  loc: -5]
!   !   !   Child: 1  Id: alice [mem: Global  size: 1  loc: 0]
!   !   Sibling: 0  Assign: =
!   !   !   Child: 0  Id: z [mem: Local  size: 1  loc: -5]
!   !   !   Child: 1  Id: bob [mem: Global  size: 1  loc: -1]
!   !   Sibling: 1  Assign: =
!   !   !   Child: 0  Id: z [mem: Local  size: 1  loc: -5]
!   !   !   Child: 1  Id: carol [mem: Global  size: 1  loc: -2]
!   !   Sibling: 2  Assign: =
!   !   !   Child: 0  Id: z [mem: Local  size: 1  loc: -5]
!   !   !   Child: 1  Id: dave [mem: Local  size: 1  loc: -3]
!   !   Sibling: 3  Assign: =
!   !   !   Child: 0  Id: z [mem: Local  size: 1  loc: -5]
!   !   !   Child: 1  Id: ella [mem: Local  size: 1  loc: -4]
Offset for end of global space: -5
Number of warnings: 7
Number of errors: 12
