ERROR(7): Symbol 'aspergillus' is not declared.
ERROR(7): Symbol 'niger' is not declared.
ERROR(8): '=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(9): Cannot use function 'dog' as a variable.
ERROR(10): Cannot use function 'dog' as a variable.
ERROR(11): Array 'ant' should be indexed by type int but got type char.
ERROR(11): Array 'ant' should be indexed by type int but got type char.
ERROR(12): Cannot use function 'dog' as a variable.
ERROR(12): Symbol 'cow' is not declared.
ERROR(14): Function 'dog' at line 4 is expecting to return type int but got type char.
WARNING(4): The parameter 'corgi' seems not to be used.
WARNING(2): The variable 'bat' seems not to be used.
ERROR(LINKER): Procedure main is not declared.
Var ant is array of type int [mem: Global  size: 11  loc: -1]
Sibling: 0  Var bat of type int [mem: Global  size: 1  loc: -11]
Sibling: 1  Func dog returns type int [mem: Global  loc: 0]
!   Child: 0  Param corgi of type bool [mem: Parameter  size: 1  loc: -2]
!   Child: 1  Compound
!   !   Child: 0  Var cat of type char [mem: Local  size: 1  loc: -3]
!   !   Child: 1  Assign: =
!   !   !   Child: 0  Id: aspergillus [mem: None  size: 1  loc: 0]
!   !   !   Child: 1  Id: niger [mem: None  size: 1  loc: 0]
!   !   Sibling: 0  Assign: =
!   !   !   Child: 0  Id: cat [mem: Local  size: 1  loc: -3]
!   !   !   Child: 1  Const: 666
!   !   Sibling: 1  Assign: =
!   !   !   Child: 0  Id: cat [mem: Local  size: 1  loc: -3]
!   !   !   Child: 1  Id: dog [mem: Local  size: 1  loc: 0]
!   !   Sibling: 2  Assign: =
!   !   !   Child: 0  Id: dog [mem: Local  size: 1  loc: 0]
!   !   !   Child: 1  Id: cat [mem: Local  size: 1  loc: -3]
!   !   Sibling: 3  Assign: =
!   !   !   Child: 0  Op: [
!   !   !   !   Child: 0  Id: ant [mem: Global  size: 11  loc: -1]
!   !   !   !   Child: 1  Const: 'x'
!   !   !   Child: 1  Op: [
!   !   !   !   Child: 0  Id: ant [mem: Global  size: 11  loc: -1]
!   !   !   !   Child: 1  Id: cat [mem: Local  size: 1  loc: -3]
!   !   Sibling: 4  Assign: =
!   !   !   Child: 0  Op: [
!   !   !   !   Child: 0  Id: ant [mem: Global  size: 11  loc: -1]
!   !   !   !   Child: 1  Id: dog [mem: Local  size: 1  loc: 0]
!   !   !   Child: 1  Op: [
!   !   !   !   Child: 0  Id: ant [mem: Global  size: 11  loc: -1]
!   !   !   !   Child: 1  Id: cow [mem: None  size: 1  loc: 0]
!   !   Sibling: 5  Return
!   !   !   Child: 0  Id: cat [mem: Local  size: 1  loc: -3]
Offset for end of global space: -12
Number of warnings: 2
Number of errors: 11
