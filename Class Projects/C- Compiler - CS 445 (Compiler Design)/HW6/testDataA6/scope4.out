WARNING(24): The parameter 'pa' seems not to be used.
WARNING(24): The parameter 'paa' seems not to be used.
Var a of type int [mem: Global  size: 1  loc: 0]
Sibling: 0  Var aa is array of type int [mem: Global  size: 12  loc: -2]
Sibling: 1  Func fox returns type void [mem: Global  loc: 0]
!   Child: 0  Param fpa of type int [mem: Parameter  size: 1  loc: -2]
!   Sibling: 0  Param fpaa is array of type int [mem: Parameter  size: 1  loc: -3]
!   Child: 1  Compound
!   !   Child: 1  Call: output
!   !   !   Child: 0  Id: fpa [mem: Parameter  size: 1  loc: -2]
!   !   Sibling: 0  Call: output
!   !   !   Child: 0  Op: *
!   !   !   !   Child: 0  Id: fpaa [mem: Parameter  size: 1  loc: -3]
!   !   Sibling: 1  Call: output
!   !   !   Child: 0  Op: [
!   !   !   !   Child: 0  Id: fpaa [mem: Parameter  size: 1  loc: -3]
!   !   !   !   Child: 1  Const: 0
!   !   Sibling: 2  Call: output
!   !   !   Child: 0  Op: [
!   !   !   !   Child: 0  Id: fpaa [mem: Parameter  size: 1  loc: -3]
!   !   !   !   Child: 1  Op: -
!   !   !   !   !   Child: 0  Op: *
!   !   !   !   !   !   Child: 0  Id: fpaa [mem: Parameter  size: 1  loc: -3]
!   !   !   !   !   Child: 1  Const: 1
!   !   Sibling: 3  Call: outnl
Sibling: 2  Func bat returns type void [mem: Global  loc: 0]
!   Child: 0  Param fpa of type int [mem: Parameter  size: 1  loc: -2]
!   Sibling: 0  Param fpaa is array of type int [mem: Parameter  size: 1  loc: -3]
!   Child: 1  Compound
!   !   Child: 1  Call: outputc
!   !   !   Child: 0  Const: 'B'
!   !   Sibling: 0  Call: fox
!   !   !   Child: 0  Id: fpa [mem: Parameter  size: 1  loc: -2]
!   !   !   Sibling: 0  Id: fpaa [mem: Parameter  size: 1  loc: -3]
Sibling: 3  Func th returns type int [mem: Global  loc: 0]
!   Child: 0  Param fpa of type int [mem: Parameter  size: 1  loc: -2]
!   Child: 1  Return
!   !   Child: 0  Op: +
!   !   !   Child: 0  Const: 1000
!   !   !   Child: 1  Id: fpa [mem: Parameter  size: 1  loc: -2]
Sibling: 4  Func tha returns type int [mem: Global  loc: 0]
!   Child: 0  Param fpaa is array of type int [mem: Parameter  size: 1  loc: -2]
!   Child: 1  Return
!   !   Child: 0  Op: +
!   !   !   Child: 0  Const: 1000
!   !   !   Child: 1  Op: [
!   !   !   !   Child: 0  Id: fpaa [mem: Parameter  size: 1  loc: -2]
!   !   !   !   Child: 1  Const: 0
Sibling: 5  Func main returns type void [mem: Global  loc: 0]
!   Child: 0  Param pa of type int [mem: Parameter  size: 1  loc: -2]
!   Sibling: 0  Param paa is array of type int [mem: Parameter  size: 1  loc: -3]
!   Child: 1  Compound
!   !   Child: 0  Var b of type int [mem: Local  size: 1  loc: -4]
!   !   Sibling: 0  Var bb is array of type int [mem: Local  size: 12  loc: -6]
!   !   Child: 1  Assign: =
!   !   !   Child: 0  Id: a [mem: Global  size: 1  loc: 0]
!   !   !   Child: 1  Const: 111
!   !   Sibling: 0  Assign: =
!   !   !   Child: 0  Op: [
!   !   !   !   Child: 0  Id: aa [mem: Global  size: 12  loc: -2]
!   !   !   !   Child: 1  Const: 0
!   !   !   Child: 1  Const: 110
!   !   Sibling: 1  Assign: =
!   !   !   Child: 0  Op: [
!   !   !   !   Child: 0  Id: aa [mem: Global  size: 12  loc: -2]
!   !   !   !   Child: 1  Const: 10
!   !   !   Child: 1  Const: 112
!   !   Sibling: 2  Assign: =
!   !   !   Child: 0  Id: b [mem: Local  size: 1  loc: -4]
!   !   !   Child: 1  Const: 222
!   !   Sibling: 3  Assign: =
!   !   !   Child: 0  Op: [
!   !   !   !   Child: 0  Id: bb [mem: Local  size: 12  loc: -6]
!   !   !   !   Child: 1  Const: 0
!   !   !   Child: 1  Const: 220
!   !   Sibling: 4  Assign: =
!   !   !   Child: 0  Op: [
!   !   !   !   Child: 0  Id: bb [mem: Local  size: 12  loc: -6]
!   !   !   !   Child: 1  Const: 10
!   !   !   Child: 1  Const: 222
!   !   Sibling: 5  Call: fox
!   !   !   Child: 0  Id: a [mem: Global  size: 1  loc: 0]
!   !   !   Sibling: 0  Id: aa [mem: Global  size: 12  loc: -2]
!   !   Sibling: 6  Call: fox
!   !   !   Child: 0  Id: b [mem: Local  size: 1  loc: -4]
!   !   !   Sibling: 0  Id: bb [mem: Local  size: 12  loc: -6]
!   !   Sibling: 7  Compound
!   !   !   Child: 0  Var c of type int [mem: Local  size: 1  loc: -17]
!   !   !   Sibling: 0  Var cc is array of type int [mem: Local  size: 12  loc: -19]
!   !   !   Child: 1  Assign: =
!   !   !   !   Child: 0  Id: c [mem: Local  size: 1  loc: -17]
!   !   !   !   Child: 1  Const: 333
!   !   !   Sibling: 0  Assign: =
!   !   !   !   Child: 0  Op: [
!   !   !   !   !   Child: 0  Id: cc [mem: Local  size: 12  loc: -19]
!   !   !   !   !   Child: 1  Const: 0
!   !   !   !   Child: 1  Const: 330
!   !   !   Sibling: 1  Assign: =
!   !   !   !   Child: 0  Op: [
!   !   !   !   !   Child: 0  Id: cc [mem: Local  size: 12  loc: -19]
!   !   !   !   !   Child: 1  Const: 10
!   !   !   !   Child: 1  Const: 334
!   !   !   Sibling: 2  Call: outnl
!   !   !   Sibling: 3  Call: fox
!   !   !   !   Child: 0  Id: a [mem: Global  size: 1  loc: 0]
!   !   !   !   Sibling: 0  Id: aa [mem: Global  size: 12  loc: -2]
!   !   !   Sibling: 4  Call: fox
!   !   !   !   Child: 0  Id: b [mem: Local  size: 1  loc: -4]
!   !   !   !   Sibling: 0  Id: bb [mem: Local  size: 12  loc: -6]
!   !   !   Sibling: 5  Call: fox
!   !   !   !   Child: 0  Id: c [mem: Local  size: 1  loc: -17]
!   !   !   !   Sibling: 0  Id: cc [mem: Local  size: 12  loc: -19]
!   !   Sibling: 8  Compound
!   !   !   Child: 0  Var d of type int [mem: Local  size: 1  loc: -17]
!   !   !   Sibling: 0  Var dd is array of type int [mem: Local  size: 12  loc: -19]
!   !   !   Child: 1  Assign: =
!   !   !   !   Child: 0  Id: d [mem: Local  size: 1  loc: -17]
!   !   !   !   Child: 1  Const: 444
!   !   !   Sibling: 0  Assign: =
!   !   !   !   Child: 0  Op: [
!   !   !   !   !   Child: 0  Id: dd [mem: Local  size: 12  loc: -19]
!   !   !   !   !   Child: 1  Const: 0
!   !   !   !   Child: 1  Const: 440
!   !   !   Sibling: 1  Assign: =
!   !   !   !   Child: 0  Op: [
!   !   !   !   !   Child: 0  Id: dd [mem: Local  size: 12  loc: -19]
!   !   !   !   !   Child: 1  Const: 10
!   !   !   !   Child: 1  Const: 445
!   !   !   Sibling: 2  Call: outnl
!   !   !   Sibling: 3  Call: fox
!   !   !   !   Child: 0  Id: a [mem: Global  size: 1  loc: 0]
!   !   !   !   Sibling: 0  Id: aa [mem: Global  size: 12  loc: -2]
!   !   !   Sibling: 4  Call: fox
!   !   !   !   Child: 0  Id: b [mem: Local  size: 1  loc: -4]
!   !   !   !   Sibling: 0  Id: bb [mem: Local  size: 12  loc: -6]
!   !   !   Sibling: 5  Call: fox
!   !   !   !   Child: 0  Id: d [mem: Local  size: 1  loc: -17]
!   !   !   !   Sibling: 0  Id: dd [mem: Local  size: 12  loc: -19]
!   !   !   Sibling: 6  Call: outnl
!   !   !   Sibling: 7  Call: bat
!   !   !   !   Child: 0  Id: a [mem: Global  size: 1  loc: 0]
!   !   !   !   Sibling: 0  Id: aa [mem: Global  size: 12  loc: -2]
!   !   !   Sibling: 8  Call: bat
!   !   !   !   Child: 0  Id: b [mem: Local  size: 1  loc: -4]
!   !   !   !   Sibling: 0  Id: bb [mem: Local  size: 12  loc: -6]
!   !   !   Sibling: 9  Call: bat
!   !   !   !   Child: 0  Id: d [mem: Local  size: 1  loc: -17]
!   !   !   !   Sibling: 0  Id: dd [mem: Local  size: 12  loc: -19]
!   !   Sibling: 9  Compound
!   !   !   Child: 0  Var e of type int [mem: LocalStatic  size: 1  loc: -13]
!   !   !   Sibling: 0  Var ee is array of type int [mem: LocalStatic  size: 12  loc: -15]
!   !   !   Child: 1  Assign: =
!   !   !   !   Child: 0  Id: e [mem: LocalStatic  size: 1  loc: -13]
!   !   !   !   Child: 1  Const: 555
!   !   !   Sibling: 0  Assign: =
!   !   !   !   Child: 0  Op: [
!   !   !   !   !   Child: 0  Id: ee [mem: LocalStatic  size: 12  loc: -15]
!   !   !   !   !   Child: 1  Const: 0
!   !   !   !   Child: 1  Const: 550
!   !   !   Sibling: 1  Assign: =
!   !   !   !   Child: 0  Op: [
!   !   !   !   !   Child: 0  Id: ee [mem: LocalStatic  size: 12  loc: -15]
!   !   !   !   !   Child: 1  Const: 10
!   !   !   !   Child: 1  Const: 556
!   !   !   Sibling: 2  Call: outnl
!   !   !   Sibling: 3  Call: fox
!   !   !   !   Child: 0  Id: a [mem: Global  size: 1  loc: 0]
!   !   !   !   Sibling: 0  Id: aa [mem: Global  size: 12  loc: -2]
!   !   !   Sibling: 4  Call: fox
!   !   !   !   Child: 0  Id: b [mem: Local  size: 1  loc: -4]
!   !   !   !   Sibling: 0  Id: bb [mem: Local  size: 12  loc: -6]
!   !   !   Sibling: 5  Call: fox
!   !   !   !   Child: 0  Id: e [mem: LocalStatic  size: 1  loc: -13]
!   !   !   !   Sibling: 0  Id: ee [mem: LocalStatic  size: 12  loc: -15]
!   !   !   Sibling: 6  Call: outnl
!   !   !   Sibling: 7  Call: bat
!   !   !   !   Child: 0  Id: a [mem: Global  size: 1  loc: 0]
!   !   !   !   Sibling: 0  Id: aa [mem: Global  size: 12  loc: -2]
!   !   !   Sibling: 8  Call: bat
!   !   !   !   Child: 0  Id: b [mem: Local  size: 1  loc: -4]
!   !   !   !   Sibling: 0  Id: bb [mem: Local  size: 12  loc: -6]
!   !   !   Sibling: 9  Call: bat
!   !   !   !   Child: 0  Id: e [mem: LocalStatic  size: 1  loc: -13]
!   !   !   !   Sibling: 0  Id: ee [mem: LocalStatic  size: 12  loc: -15]
!   !   Sibling: 10  Call: outnl
!   !   Sibling: 11  Call: output
!   !   !   Child: 0  Call: th
!   !   !   !   Child: 0  Id: a [mem: Global  size: 1  loc: 0]
!   !   Sibling: 12  Call: output
!   !   !   Child: 0  Call: tha
!   !   !   !   Child: 0  Id: aa [mem: Global  size: 12  loc: -2]
!   !   Sibling: 13  Call: outnl
!   !   Sibling: 14  Call: bat
!   !   !   Child: 0  Call: th
!   !   !   !   Child: 0  Id: a [mem: Global  size: 1  loc: 0]
!   !   !   Sibling: 0  Id: aa [mem: Global  size: 12  loc: -2]
!   !   Sibling: 15  Call: outnl
Offset for end of global space: -26
Number of warnings: 2
Number of errors: 0
