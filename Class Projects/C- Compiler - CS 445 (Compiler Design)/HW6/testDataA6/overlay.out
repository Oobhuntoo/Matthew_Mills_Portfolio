Func main returns type void [mem: Global  loc: 0]
!   Child: 1  Compound
!   !   Child: 0  Var z of type int [mem: Local  size: 1  loc: -2]
!   !   Child: 1  Assign: =
!   !   !   Child: 0  Id: z [mem: Local  size: 1  loc: -2]
!   !   !   Child: 1  Const: 111
!   !   Sibling: 0  Compound
!   !   !   Child: 0  Var x is array of type int [mem: Local  size: 101  loc: -4]
!   !   !   Child: 1  Assign: =
!   !   !   !   Child: 0  Id: z [mem: Local  size: 1  loc: -2]
!   !   !   !   Child: 1  Const: 0
!   !   !   Sibling: 0  While
!   !   !   !   Child: 0  Op: <
!   !   !   !   !   Child: 0  Id: z [mem: Local  size: 1  loc: -2]
!   !   !   !   !   Child: 1  Const: 100
!   !   !   !   Child: 1  Compound
!   !   !   !   !   Child: 1  Assign: =
!   !   !   !   !   !   Child: 0  Op: [
!   !   !   !   !   !   !   Child: 0  Id: x [mem: Local  size: 101  loc: -4]
!   !   !   !   !   !   !   Child: 1  Id: z [mem: Local  size: 1  loc: -2]
!   !   !   !   !   !   Child: 1  Const: 1
!   !   !   !   !   Sibling: 0  Assign: ++
!   !   !   !   !   !   Child: 0  Id: z [mem: Local  size: 1  loc: -2]
!   !   Sibling: 1  Compound
!   !   !   Child: 0  Var y is array of type int [mem: Local  size: 101  loc: -4]
!   !   !   Child: 1  Assign: =
!   !   !   !   Child: 0  Id: z [mem: Local  size: 1  loc: -2]
!   !   !   !   Child: 1  Const: 0
!   !   !   Sibling: 0  While
!   !   !   !   Child: 0  Op: <
!   !   !   !   !   Child: 0  Id: z [mem: Local  size: 1  loc: -2]
!   !   !   !   !   Child: 1  Const: 100
!   !   !   !   Child: 1  Compound
!   !   !   !   !   Child: 1  Assign: =
!   !   !   !   !   !   Child: 0  Op: [
!   !   !   !   !   !   !   Child: 0  Id: y [mem: Local  size: 101  loc: -4]
!   !   !   !   !   !   !   Child: 1  Id: z [mem: Local  size: 1  loc: -2]
!   !   !   !   !   !   Child: 1  Const: 1
!   !   !   !   !   Sibling: 0  Assign: ++
!   !   !   !   !   !   Child: 0  Id: z [mem: Local  size: 1  loc: -2]
!   !   !   Sibling: 1  Call: output
!   !   !   !   Child: 0  Op: [
!   !   !   !   !   Child: 0  Id: y [mem: Local  size: 101  loc: -4]
!   !   !   !   !   Child: 1  Const: 1
!   !   !   Sibling: 2  Call: outnl
!   !   !   Sibling: 3  Assign: =
!   !   !   !   Child: 0  Op: [
!   !   !   !   !   Child: 0  Id: y [mem: Local  size: 101  loc: -4]
!   !   !   !   !   Child: 1  Const: 1
!   !   !   !   Child: 1  Const: 333
!   !   !   Sibling: 4  Call: output
!   !   !   !   Child: 0  Op: [
!   !   !   !   !   Child: 0  Id: y [mem: Local  size: 101  loc: -4]
!   !   !   !   !   Child: 1  Const: 1
!   !   !   Sibling: 5  Call: outnl
!   !   Sibling: 2  Call: output
!   !   !   Child: 0  Id: z [mem: Local  size: 1  loc: -2]
!   !   Sibling: 3  Call: outnl
Offset for end of global space: 0
Number of warnings: 0
Number of errors: 0
