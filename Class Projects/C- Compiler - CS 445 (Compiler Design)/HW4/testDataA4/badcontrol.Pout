ERROR(6): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(7): '=' requires operands of the same type but lhs is type int and rhs is type bool.
ERROR(9): Expecting Boolean test condition in if statement but got type int.
ERROR(11): Expecting Boolean test condition in if statement but got type int.
ERROR(14): Expecting Boolean test condition in if statement but got type int.
ERROR(14): Expecting Boolean test condition in if statement but got type int.
ERROR(17): Expecting Boolean test condition in if statement but got type int.
ERROR(18): Expecting Boolean test condition in if statement but got type int.
ERROR(19): Expecting Boolean test condition in elsif statement but got type int.
ERROR(20): Expecting Boolean test condition in if statement but got type int.
ERROR(21): Expecting Boolean test condition in elsif statement but got type int.
ERROR(23): Expecting Boolean test condition in while statement but got type int.
ERROR(25): Expecting Boolean test condition in while statement but got type void.
ERROR(33): Expecting Boolean test condition in while statement but got type int.
ERROR(36): Expecting Boolean test condition in while statement but got type int.
ERROR(44): Cannot have a break statement outside of loop.
WARNING(48): The variable 'i' seems not to be used.
ERROR(50): Expecting integer in range for loop statement but got type bool.
WARNING(50): The variable 'i' seems not to be used.
ERROR(52): Expecting integer in range for loop statement but got type void.
ERROR(52): Symbol 'zog' is not declared.
WARNING(52): The variable 'i' seems not to be used.
WARNING(54): Variable 'i' may be uninitialized when used here.
ERROR(54): '=' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(56): Expecting integer in range for loop statement but got type bool.
WARNING(56): The variable 'i' seems not to be used.
ERROR(58): Expecting integer in range for loop statement but got type void.
WARNING(58): The variable 'i' seems not to be used.
ERROR(60): Symbol 'zog' is not declared.
WARNING(60): The variable 'i' seems not to be used.
ERROR(62): Symbol 'zog' is not declared.
WARNING(62): The variable 'i' seems not to be used.
Func nothin returns type void [line: 1]
Sibling: 0  Func main returns type void [line: 3]
!   Child: 1  Compound [line: 3]
!   !   Child: 0  Var x of type int [line: 4]
!   !   Sibling: 0  Var y of type int [line: 4]
!   !   Child: 1  Assign: = [type int] [line: 6]
!   !   !   Child: 0  Id: x [type int] [line: 6]
!   !   !   Child: 1  Const: true [type bool] [line: 6]
!   !   Sibling: 0  Assign: = [type int] [line: 7]
!   !   !   Child: 0  Id: y [type int] [line: 7]
!   !   !   Child: 1  Const: false [type bool] [line: 7]
!   !   Sibling: 1  If [line: 9]
!   !   !   Child: 0  Id: x [type int] [line: 9]
!   !   !   Child: 1  Const: 111 [type int] [line: 9]
!   !   Sibling: 2  If [line: 11]
!   !   !   Child: 0  Id: y [type int] [line: 11]
!   !   !   Child: 1  Const: 222 [type int] [line: 11]
!   !   !   Child: 2  Const: 333 [type int] [line: 12]
!   !   Sibling: 3  If [line: 14]
!   !   !   Child: 0  Id: x [type int] [line: 14]
!   !   !   Child: 1  If [line: 14]
!   !   !   !   Child: 0  Id: y [type int] [line: 14]
!   !   !   !   Child: 1  Const: 444 [type int] [line: 14]
!   !   !   !   Child: 2  Const: 555 [type int] [line: 15]
!   !   Sibling: 4  If [line: 17]
!   !   !   Child: 0  Id: x [type int] [line: 17]
!   !   !   Child: 1  If [line: 18]
!   !   !   !   Child: 0  Id: y [type int] [line: 18]
!   !   !   !   Child: 1  Const: 444 [type int] [line: 18]
!   !   !   !   Child: 2  Elsif [line: 19]
!   !   !   !   !   Child: 0  Const: 555 [type int] [line: 19]
!   !   !   !   !   Child: 1  Const: 556 [type int] [line: 19]
!   !   !   !   !   Child: 2  If [line: 20]
!   !   !   !   !   !   Child: 0  Id: x [type int] [line: 20]
!   !   !   !   !   !   Child: 1  Const: 557 [type int] [line: 20]
!   !   !   !   !   !   Child: 2  Elsif [line: 21]
!   !   !   !   !   !   !   Child: 0  Const: 559 [type int] [line: 21]
!   !   !   !   !   !   !   Child: 1  Id: x [type int] [line: 21]
!   !   Sibling: 5  While [line: 23]
!   !   !   Child: 0  Id: x [type int] [line: 23]
!   !   !   Child: 1  Const: 666 [type int] [line: 23]
!   !   Sibling: 6  While [line: 25]
!   !   !   Child: 0  Call: nothin [type void] [line: 25]
!   !   !   Child: 1  Compound [line: 25]
!   !   !   !   Child: 1  Const: 777 [type int] [line: 26]
!   !   !   !   Sibling: 0  Break [line: 27]
!   !   !   !   Sibling: 1  Const: 888 [type int] [line: 28]
!   !   !   !   Sibling: 2  Break [line: 29]
!   !   !   !   Sibling: 3  Const: 999 [type int] [line: 30]
!   !   Sibling: 7  While [line: 33]
!   !   !   Child: 0  Id: x [type int] [line: 33]
!   !   !   Child: 1  Compound [line: 33]
!   !   !   !   Child: 1  Const: 111 [type int] [line: 34]
!   !   !   !   Sibling: 0  Break [line: 35]
!   !   !   !   Sibling: 1  While [line: 36]
!   !   !   !   !   Child: 0  Id: y [type int] [line: 36]
!   !   !   !   !   Child: 1  Compound [line: 36]
!   !   !   !   !   !   Child: 1  Const: 222 [type int] [line: 37]
!   !   !   !   !   !   Sibling: 0  Break [line: 38]
!   !   !   !   !   !   Sibling: 1  Const: 333 [type int] [line: 39]
!   !   !   !   Sibling: 2  Break [line: 41]
!   !   !   !   Sibling: 3  Const: 444 [type int] [line: 42]
!   !   Sibling: 8  Break [line: 44]
!   !   Sibling: 9  LoopForever [line: 46]
!   !   !   Child: 1  Break [line: 46]
!   !   Sibling: 10  Loop [line: 48]
!   !   !   Child: 0  Var i of type int [line: 48]
!   !   !   Child: 1  Range [line: 48]
!   !   !   !   Child: 0  Const: 1 [type int] [line: 48]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 48]
!   !   !   !   Child: 2  Const: 1 [type int] [line: 48]
!   !   !   Child: 2  Break [line: 48]
!   !   Sibling: 11  Loop [line: 50]
!   !   !   Child: 0  Var i of type int [line: 50]
!   !   !   Child: 1  Range [line: 50]
!   !   !   !   Child: 0  Const: true [type bool] [line: 50]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 50]
!   !   !   !   Child: 2  Const: 1 [type int] [line: 50]
!   !   Sibling: 12  Loop [line: 52]
!   !   !   Child: 0  Var i of type int [line: 52]
!   !   !   Child: 1  Range [line: 52]
!   !   !   !   Child: 0  Call: nothin [type void] [line: 52]
!   !   !   !   Child: 1  Id: zog [undefined type] [line: 52]
!   !   !   !   Child: 2  Const: 1 [type int] [line: 52]
!   !   Sibling: 13  Loop [line: 54]
!   !   !   Child: 0  Var i of type int [line: 54]
!   !   !   Child: 1  Range [line: 54]
!   !   !   !   Child: 0  Const: 1 [type int] [line: 54]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 54]
!   !   !   !   Child: 2  Const: 99 [type int] [line: 54]
!   !   !   Child: 2  Compound [line: 54]
!   !   !   !   Child: 0  Var c of type char [line: 54]
!   !   !   !   Child: 1  Assign: = [type char] [line: 54]
!   !   !   !   !   Child: 0  Id: c [type char] [line: 54]
!   !   !   !   !   Child: 1  Id: i [type int] [line: 54]
!   !   Sibling: 14  Loop [line: 56]
!   !   !   Child: 0  Var i of type int [line: 56]
!   !   !   Child: 1  Range [line: 56]
!   !   !   !   Child: 0  Const: 1 [type int] [line: 56]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 56]
!   !   !   !   Child: 2  Const: true [type bool] [line: 56]
!   !   !   Child: 2  Break [line: 56]
!   !   Sibling: 15  Loop [line: 58]
!   !   !   Child: 0  Var i of type int [line: 58]
!   !   !   Child: 1  Range [line: 58]
!   !   !   !   Child: 0  Const: 1 [type int] [line: 58]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 58]
!   !   !   !   Child: 2  Call: nothin [type void] [line: 58]
!   !   !   Child: 2  Break [line: 58]
!   !   Sibling: 16  Loop [line: 60]
!   !   !   Child: 0  Var i of type int [line: 60]
!   !   !   Child: 1  Range [line: 60]
!   !   !   !   Child: 0  Const: 1 [type int] [line: 60]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 60]
!   !   !   !   Child: 2  Id: zog [undefined type] [line: 60]
!   !   !   Child: 2  Break [line: 60]
!   !   Sibling: 17  Loop [line: 62]
!   !   !   Child: 0  Var i of type int [line: 62]
!   !   !   Child: 1  Range [line: 62]
!   !   !   !   Child: 0  Const: 1 [type int] [line: 62]
!   !   !   !   Child: 1  Const: 10 [type int] [line: 62]
!   !   !   !   Child: 2  Call: zog [undefined type] [line: 62]
!   !   !   Child: 2  Break [line: 62]
Number of warnings: 8
Number of errors: 24
